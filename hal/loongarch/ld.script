OUTPUT_ARCH( "loongarch" )
ENTRY( _entry )

SECTIONS
{
  . = 0x9000000090000000;

  .text : {
	PROVIDE(stext = .);

	PROVIDE(_startup_text_s = .);
	*(.text.osstartup)
	PROVIDE(_startup_text_e = .);

	PROVIDE(_common_text_s = .);

    . = ALIGN(0x1000);
    _keentry = .;
    *(.text.k_eentry)

    . = ALIGN(0x1000);
    _ueentry = .;
    *(.text.u_eentry)

    . = ALIGN(0x1000);
    _tlbrentry = .;
    *(.text.tlbrentry)

    . = ALIGN(0x1000);
    _merrentry = .;
    *(.text.merrentry)

    . = ALIGN(0x1000);
    *(.text .text.*)
	
	PROVIDE(_common_text_e = .);
    _trampoline = .;
    *(trampsec)
    . = ALIGN(0x1000);
    ASSERT(. - _trampoline <= 0x1000, "error: trampoline larger than one page");
    PROVIDE(KERNEL_TEXT = .);
  }



  .rodata : {
    . = ALIGN(16);
    *(.srodata .srodata.*)
    . = ALIGN(16);
    *(.rodata .rodata.*)
  }

  .data : {
    . = ALIGN(16);
    *(.sdata .sdata.*) 
    . = ALIGN(16);
    *(.data .data.*)
  }

  . = ALIGN(0x1000);
  PROVIDE(KERNEL_BSS_START = .);

  .bss : {
    . = ALIGN(16);
	_bss_start_addr = .;
    *(.sbss .sbss.*) 
    . = ALIGN(16);
    *(.bss .bss.*)
	. = ALIGN(16);
	_bss_end_addr = .;
  }

  PROVIDE(KERNEL_DATA  = .);

  .user : {
    .user.init = .; /* 用户程序*/
    *(.user.init);
    . = ALIGN(0x1000);
  }
  PROVIDE(USER_END = 0x9000000090000000 + 512M);
}
